name: Build Multiplatform Application

on:
  push:
    tags:
      - '*'

jobs:
  build-desktop:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] # windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make Gradle wrapper executable (Linux and macOS only)
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Build for ${{ matrix.os }}
        run: ./gradlew packageReleaseDistributionForCurrentOS

      - name: Upload platform-specific artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: |
            composeApp/build/compose/binaries/main-release/exe/*.exe
            composeApp/build/compose/binaries/main-release/deb/*.deb
            composeApp/build/compose/binaries/main-release/dmg/*.dmg

  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build APK
        run: ./gradlew assembleDebug

      - name: Upload Android APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: composeApp/build/outputs/apk/debug/*.apk

  build-wasm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build WebAssembly
        run: ./gradlew wasmJsBrowserDistribution

      - name: Upload WebAssembly files
        uses: actions/upload-artifact@v3
        with:
          name: wasm-web-files
          path: composeApp/build/dist/wasmJs/productionExecutable/*

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: composeApp/build/dist/wasmJs/productionExecutable/

  create-release:
    runs-on: ubuntu-latest
    needs: [build-desktop, build-android, build-wasm]
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            This release includes builds for all supported platforms:
            - Desktop (Windows, macOS, Linux)
            - Android
            - WebAssembly
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts
          asset_name: build_artifacts
          asset_content_type: application/zip

  deploy-github-pages:
    runs-on: ubuntu-latest
    needs: build-wasm
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
